name: Build and Deploy to EKS
on: [push, workflow_dispatch]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Pull code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Log into Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Build, tag, and push the Docker image to Amazon ECR
      - name: Build, tag, and push image to Amazon ECR
        run: |
          # Build the Docker image
          IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/my-web-app:latest"
          docker build -t $IMAGE_URI ./ProjectWebApp
          docker push $IMAGE_URI
          echo "Code has been pushed to ECR repository: $IMAGE_URI"

      # Update the Kubernetes deployment to use the new image
      - name: Update Kubernetes deployment
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}

      # Deploy to EKS
      - name: Deploy to EKS
        run: |
          kubectl set image deployment/my-web-app my-web-app=$IMAGE_URI
          kubectl rollout status deployment/my-web-app
          echo "Deployment to EKS completed successfully."
